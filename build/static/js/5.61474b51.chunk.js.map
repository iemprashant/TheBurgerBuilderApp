{"version":3,"sources":["Components/Order/Order.js","hoc/withErrorHandler/withErrorHandler.js","Containers/Orders/Orders.js","Components/Order/Order.module.css"],"names":["order","props","ingredients","ingredientName","push","name","amount","ingredientOutput","map","ig","style","textTransform","display","margin","border","padding","key","className","classes","Order","Number","parseFloat","price","toFixed","withErrorHandler","WrappedComponent","axios","useState","error","setError","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","useEffect","eject","Modal","show","modalClosed","message","connect","state","orders","loading","token","auth","userId","dispatch","onFetchOrders","actions","Spinner","id","module","exports"],"mappings":"wKAoCeA,EAhCD,SAAEC,GACZ,IAAMC,EAAc,GAEpB,IAAM,IAAIC,KAAkBF,EAAMC,YAC9BA,EAAYE,KACR,CACIC,KAAMF,EACNG,OAAQL,EAAMC,YAAYC,KAKtC,IAAMI,EAAmBL,EAAYM,KAAI,SAAAC,GACrC,OAAO,0BACHC,MAAO,CACHC,cAAe,aACfC,QAAS,eACTC,OAAQ,QACRC,OAAQ,iBACRC,QAAS,OAEbC,IAAKP,EAAGJ,MAAOI,EAAGJ,KARf,KAQuBI,EAAGH,OAR1B,QAWX,OACI,yBAAKW,UAAWC,IAAQC,OACpB,2CAAiBZ,GACjB,qCAAU,uCAAaa,OAAOC,WAAYpB,EAAMqB,OAAQC,QAAS,O,wCCO9DC,EAnCU,SAAEC,EAAkBC,GACzC,OAAO,SAAAzB,GAAU,IAAD,EACW0B,mBAAS,MADpB,mBACLC,EADK,KACCC,EADD,KAENC,EAAiBJ,EAAMK,aAAaC,QAAQC,KAAK,SAAAC,GAEnD,OADAL,EAAS,MACFK,KAELC,EAAiBT,EAAMK,aAAaK,SAASH,KAAK,SAAAI,GAAG,OAAIA,KAAK,SAAAT,GAChEC,EAASD,MAEbU,qBAAU,WACN,OAAO,WACHZ,EAAMK,aAAaC,QAAQO,MAAMT,GACjCJ,EAAMK,aAAaK,SAASG,MAAMJ,MAEvC,CAACL,EAAeK,IAMnB,OACI,kBAAC,WAAD,KACI,kBAACK,EAAA,EAAD,CACIC,KAAMb,EACNc,YARkB,WAC1Bb,EAAS,QAQAD,EAAMA,EAAMe,QAAU,MAE3B,kBAAClB,EAAqBxB,M,QCQvB2C,uBAbS,SAAAC,GACpB,MAAO,CACHC,OAAOD,EAAM7C,MAAM8C,OACnBC,QAAQF,EAAM7C,MAAM+C,QACpBC,MAAMH,EAAMI,KAAKD,MACjBE,OAAOL,EAAMI,KAAKC,WAEC,SAAAC,GACvB,MAAM,CACFC,cAAc,SAACJ,EAAME,GAAP,OAAgBC,EAASE,IAAmBL,EAAME,QAIzDN,CAA6CpB,GA/B7C,SAAAvB,GAAU,IACdmD,EAA4BnD,EAA5BmD,cAAcJ,EAAc/C,EAAd+C,MAAME,EAAQjD,EAARiD,OAC3BZ,qBAAU,WACNc,EAAcJ,EAAME,KACtB,CAACE,EAAcJ,EAAME,IAEvB,IAAIJ,EAAO,kBAACQ,EAAA,EAAD,MAUX,OATKrD,EAAM8C,UACPD,EAAO7C,EAAM6C,OAAOtC,KAAI,SAAAR,GAAK,OACb,kBAACmB,EAAD,CACAH,IAAKhB,EAAMuD,GACXrD,YAAaF,EAAME,YACnBoB,MAAOtB,EAAMsB,YAI1BwB,IAe2EpB,O,mBCtCtF8B,EAAOC,QAAU,CAAC,MAAQ","file":"static/js/5.61474b51.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport classes from './Order.module.css';\r\n\r\nconst order = ( props ) => {\r\n    const ingredients = [];\r\n\r\n    for ( let ingredientName in props.ingredients ) {\r\n        ingredients.push(\r\n            {\r\n                name: ingredientName,\r\n                amount: props.ingredients[ingredientName]\r\n            }\r\n        );\r\n    }\r\n\r\n    const ingredientOutput = ingredients.map(ig => {\r\n        return <span \r\n            style={{\r\n                textTransform: 'capitalize',\r\n                display: 'inline-block',\r\n                margin: '0 8px',\r\n                border: '1px solid #ccc',\r\n                padding: '5px'\r\n                }}\r\n            key={ig.name}>{ig.name} ({ig.amount})</span>;\r\n    });\r\n\r\n    return (\r\n        <div className={classes.Order}>\r\n            <p>Ingredients: {ingredientOutput}</p>\r\n            <p>Price: <strong>USD {Number.parseFloat( props.price ).toFixed( 2 )}</strong></p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default order;","import React, {useEffect,useState, Fragment } from 'react';\nimport Modal from '../../Components/UI/Modal/Modal'\n\nconst withErrorHandler = ( WrappedComponent, axios ) => {\n    return props => {\n        const [error,setError]=useState(null);\n        const reqInterceptor = axios.interceptors.request.use( req => {\n            setError(null);\n            return req;\n            });\n        const resInterceptor = axios.interceptors.response.use( res => res, error => {\n            setError(error)\n            } );\n        useEffect(() => {\n            return () => {\n                axios.interceptors.request.eject(reqInterceptor );\n                axios.interceptors.response.eject(resInterceptor);\n            };\n        }, [reqInterceptor,resInterceptor])\n\n        const errorConfirmedHandler = () => {\n            setError(null);\n        };\n\n        return (\n            <Fragment>\n                <Modal\n                    show={error}\n                    modalClosed={errorConfirmedHandler}>\n                    {error?error.message : null}\n                </Modal>\n                <WrappedComponent {...props} />\n            </Fragment>\n        );\n    }\n}\n\n\nexport default withErrorHandler;","import React, {useEffect} from 'react'\r\nimport Order from '../../Components/Order/Order'\r\nimport * as actions from '../../store/actions/index'\r\nimport { connect } from 'react-redux'\r\nimport Spinner from '../../Components/UI/Spinner/Spinner'\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport axios from '../../axios-orders'\r\n\r\nconst Orders = props => {\r\n    const {onFetchOrders,token,userId}=props;\r\n    useEffect(() => {\r\n        onFetchOrders(token,userId);\r\n    },[onFetchOrders,token,userId])\r\n\r\n    let orders=<Spinner/>;\r\n    if( !props.loading){\r\n        orders=props.orders.map(order=>(\r\n                        <Order \r\n                        key={order.id}\r\n                        ingredients={order.ingredients}\r\n                        price={order.price}/>\r\n                    ))\r\n        }\r\n        \r\n    return orders;\r\n}\r\nconst mapStateToProps = state =>{\r\n    return {\r\n        orders:state.order.orders,\r\n        loading:state.order.loading,\r\n        token:state.auth.token,\r\n        userId:state.auth.userId\r\n}};\r\nconst mapDispatchToProps = dispatch =>{\r\n    return{\r\n        onFetchOrders:(token,userId)=>dispatch(actions.fetchOrder(token,userId))\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)( withErrorHandler( Orders, axios ) );\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__1HmuK\"};"],"sourceRoot":""}